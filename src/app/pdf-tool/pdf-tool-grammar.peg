---
import { PDFUtil } from './pdf-util';
import { PDFDocument } from 'pdf-lib';
---

start       := expr=expression $
               .doc = Promise<PDFDocument>  { 
                                              return expr.doc; 
                                            }

expression  := fgroup=fileGroup ':' pgroup=pageGroup ',' expr=expression 
               .doc = Promise<PDFDocument>  { 
                                              return PDFUtil.concat(PDFUtil.pickPages(fgroup.doc, pgroup.pages), expr.doc); 
                                            }
             | fgroup=fileGroup ':' pgroup=pageGroup 
               .doc = Promise<PDFDocument>  { 
                                              return PDFUtil.pickPages(fgroup.doc, pgroup.pages); 
                                            }
             | group=fileGroup ',' expr=expression 
               .doc = Promise<PDFDocument>  { 
                                              return PDFUtil.concat(group.doc, expr.doc); 
                                            }
             | group=fileGroup
               .doc = Promise<PDFDocument>  { 
                                              return group.doc; 
                                            }

pageGroup   := '\(' list=pageList '\)'
               .pages = number[]  { 
                                    return list.pages; 
                                  }
pageList    := p=page ',' list=pageList 
               .pages = number[]  { 
                                    return [p.page].concat(list.pages); 
                                  }
             | p=page
               .pages = number[]  { 
                                    return [p.page]; 
                                  }
page        := id=num
               .page = number     { 
                                    return id.value; 
                                  }

fileGroup   := '\(' list=fileList '\)'
               .doc = Promise<PDFDocument>  { 
                                              return list.doc; 
                                            }
fileList    := left=file ',' right=fileList 
               .doc = Promise<PDFDocument>  { 
                                              return PDFUtil.concat(left.doc, right.doc); 
                                            }
             | left=file
               .doc = Promise<PDFDocument>  { 
                                              return left.doc; 
                                            } 
file        := id=num                             
               .doc = Promise<PDFDocument>  { 
                                              return PDFUtil.identity(id.value); 
                                            }

num         := val='[0-9]+'
               .value = number { return parseInt(val); }